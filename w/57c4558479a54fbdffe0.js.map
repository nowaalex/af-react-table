{"version":3,"sources":["webpack://af-virtual-scroll/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://af-virtual-scroll/./src/components/List/Rows/index.js","webpack://af-virtual-scroll/./src/components/List/index.js","webpack://af-virtual-scroll/./src/examples/list/simple/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","E","START_INDEX","END_INDEX","Rows","renderRow","useSubscription","API","startIndex","endIndex","result","push","memo","List","fixed","children","estimatedRowHeight","rowsQuantity","overscanRowsCount","dataRef","props","rowsContainerNode","rowsContainerRef","useState","Store","useModel","FixedHeightsStore","VariableHeightsStore","Context","value","ScrollContainer","Scroller","as","ref","propTypes","defaultProps","wrapperStyle","minWidth","maxWidth","style","padding"],"mappings":";sHAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E,wMCRT,MAAMM,EAAI,CAAEC,KAAaC,MAEnBC,EAAO,EAAGC,gBAAgBC,QAAiBC,IAE7C,MAAM,WAAEC,EAAF,SAAcC,GAAaF,EAC3BG,EAAS,GAEf,IAAK,IAAIhB,EAAIc,EAAYd,EAAIe,EAAUf,IACnCgB,EAAOC,KAAMN,EAAWX,IAG5B,OAAOgB,IACRT,GAEH,GAAeW,UAAMR,GCHfS,EAAQ,IAQR,IARQ,MACVC,EADU,SAEVC,EAFU,mBAGVC,EAHU,aAIVC,EAJU,kBAKVC,EALU,QAMVC,GAEE,EADCC,GACD,iGAEF,MAAQC,EAAmBC,IAAqBC,gBAE1CC,GAAQC,OACVX,EAAQY,IAAoBC,IAC5BR,EACAH,EACAE,EACAD,EACAI,GAGJ,OACI,SAACO,EAAA,WAAD,CAAkBC,MAAOL,EAAzB,UACI,UAACM,EAAA,EAAD,iBAAqBV,EAArB,YACI,SAACW,EAAA,EAAD,CAAUC,GAAG,SACb,gBAAKC,IAAKX,EAAV,UACI,SAAC,EAAD,CAAMjB,UAAWU,aAOrCF,EAAKqB,UAAL,GAUArB,EAAKsB,aAAe,CAChBrB,OAAO,EACPE,mBAAoB,GACpBE,kBAAmB,GAGvB,SAAeN,UAAMC,I,qFCxDrB,MAAMuB,EAAe,CAAEC,SAAU,IAAKC,SAAU,KAQhD,EANmB,KACf,SAAC,IAAD,CAAMC,MAAOH,EAAcnB,aAAc,IAAMD,mBAAoB,GAAnE,SACKtB,IAAK,iBAAK6C,MAAO,CAAEC,QAAS,SAAvB,iBAA+C9C,IAARA","file":"57c4558479a54fbdffe0.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { memo } from \"react\";\r\nimport { START_INDEX, END_INDEX } from \"constants/events\";\r\nimport useSubscription from \"hooks/useSubscription\";\r\n\r\nconst E = [ START_INDEX, END_INDEX ];\r\n\r\nconst Rows = ({ renderRow }) => useSubscription( API => {\r\n\r\n    const { startIndex, endIndex } = API;\r\n    const result = [];\r\n\r\n    for( let i = startIndex; i < endIndex; i++ ){\r\n        result.push( renderRow( i ) );\r\n    }\r\n\r\n    return result;\r\n}, E );\r\n\r\nexport default memo( Rows );","import { memo, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Context from \"Context\";\r\nimport useModel from \"hooks/useModel\";\r\n\r\nimport VariableHeightsStore from \"models/VariableSizeList\";\r\nimport FixedHeightsStore from \"models/FixedSizeList\";\r\n\r\nimport ScrollContainer from \"../common/ScrollContainer\";\r\nimport Scroller from \"../common/Scroller\";\r\nimport commonPropTypes from \"../common/propTypes\";\r\n\r\nimport Rows from \"./Rows\";\r\n\r\nconst List = ({\r\n    fixed,\r\n    children,\r\n    estimatedRowHeight,\r\n    rowsQuantity,\r\n    overscanRowsCount,\r\n    dataRef,\r\n    ...props\r\n}) => {\r\n\r\n    const [ rowsContainerNode, rowsContainerRef ] = useState();\r\n\r\n    const Store = useModel(\r\n        fixed ? FixedHeightsStore : VariableHeightsStore,\r\n        dataRef,\r\n        estimatedRowHeight,\r\n        overscanRowsCount,\r\n        rowsQuantity,\r\n        rowsContainerNode\r\n    );\r\n\r\n    return (\r\n        <Context.Provider value={Store}>\r\n            <ScrollContainer {...props}>\r\n                <Scroller as=\"div\" />\r\n                <div ref={rowsContainerRef}>\r\n                    <Rows renderRow={children} /> \r\n                </div>\r\n            </ScrollContainer>\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nList.propTypes = {\r\n    ...commonPropTypes,\r\n\r\n    /**\r\n     * @param {number} rowIndex\r\n     * @returns {any} one row element child. Fragments are not supported.\r\n     */\r\n    children: PropTypes.func.isRequired\r\n}\r\n\r\nList.defaultProps = {\r\n    fixed: false,\r\n    estimatedRowHeight: 20,\r\n    overscanRowsCount: 4\r\n};\r\n\r\nexport default memo( List );","import List from \"af-virtual-scroll/List\";\n\n\n/*\n    Initial dimensions are not required, but flex-grow/min-width/smth. should be set,\n    because otherwise List may collapse to zero-width\n*/\n\nconst wrapperStyle = { minWidth: 200, maxWidth: 400 };\n\nconst SimpleList = () => (\n    <List style={wrapperStyle} rowsQuantity={1000} estimatedRowHeight={20}>\n        {i => <div style={{ padding: \"0.5em\" }} key={i}>row {i}</div>}\n    </List>\n);\n\nexport default SimpleList;"],"sourceRoot":""}