{"version":3,"sources":["webpack://af-virtual-scroll/./src/examples/table/variableRowHeights/index.js"],"names":["StyledTable","styled","Table","DEFAULT_ROW_COUNT","dynamicListRowHeights","useState","times","r","columns","dataKey","label","render","cellData","style","color","textAlign","lineHeight","background","getRowData","i","a","b","c","estimatedRowHeight","overscanRowsCount","rowsQuantity"],"mappings":";0WAMA,IAAMA,GAAcC,QAAOC,IAAPD,CAAH,KAOXE,EAAoB,IAqC1B,UAlC0B,WAAM,IAEpBC,GAA0BC,eAAS,kBAAMC,IAAOH,GAAmB,kBAAMI,IAAG,IAAK,WAF7D,GAItBC,EAAU,CACZ,CACIC,QAAS,IACTC,MAAO,IACPC,OAAQ,SAAEC,GAAF,OACJ,gBAAKC,MAAO,CACRC,MAAO,OACPC,UAAW,SACXC,WAAeZ,EAAsBQ,GAA3B,KACVK,WAAY,OAAgB,GAATL,EAAY,IAArB,aAJd,SAMKA,MAIb,CAAEH,QAAS,IAAKC,MAAO,KACvB,CAAED,QAAS,IAAKC,MAAO,MAG3B,OACI,SAACV,EAAD,CACIkB,WAAY,SAAAC,GAAC,MAAK,CAAEC,EAAGD,EAAGE,EAAG,UAAUF,EAAKG,EAAG,UAAUH,IACzDX,QAASA,EACTe,mBAAoB,IACpBC,kBAAmB,EACnBC,aAActB","file":"e1399610c9cc2aa21c3a.js","sourcesContent":["import { useState } from \"react\";\nimport { Table } from  \"af-virtual-scroll\";\nimport styled from \"styled-components\";\nimport times from \"lodash/times\";\nimport r from \"lodash/random\";\n\nconst StyledTable = styled(Table)`\n    flex: 1 1 20em;\n    min-width: 20em;\n    max-width: 50em;\n`;\n\n\nconst DEFAULT_ROW_COUNT = 100000;\n\n\nconst VariableSizeTable = () => {\n\n    const [ dynamicListRowHeights ] = useState(() => times( DEFAULT_ROW_COUNT, () => r( 100, 200 ) ));\n\n    const columns = [\n        {\n            dataKey: \"a\",\n            label: \"a\",\n            render: ( cellData ) => (\n                <div style={{\n                    color: \"#000\",\n                    textAlign: \"center\",\n                    lineHeight: `${dynamicListRowHeights[cellData]}px`,\n                    background: `hsl(${cellData*11%360},60%,60%)`\n                }}>\n                    {cellData}\n                </div>\n            )\n        },\n        { dataKey: \"b\", label: \"b\" },\n        { dataKey: \"c\", label: \"c\" }\n    ];\n\n    return (\n        <StyledTable\n            getRowData={i => ({ a: i, b: `cell_b_${i}`, c: `cell_c_${i}` })}\n            columns={columns}\n            estimatedRowHeight={150}\n            overscanRowsCount={5}\n            rowsQuantity={DEFAULT_ROW_COUNT}\n        />\n    );\n}\n\nexport default VariableSizeTable;"],"sourceRoot":""}